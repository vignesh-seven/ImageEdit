import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '../styles/Index.module.css'
import { useState, useEffect } from 'react';

import MyCanvas from '../components/MyCanvas'
import ButtonPanel from '../components/ButtonPanel';

const inter = Inter({ subsets: ['latin'] })

export default function Home() {

  let windowSize = useWindowSize()

  console.log(windowSize)
  const [ isHoldingSpace, setIsHoldingSpace ] = useState(false)

  const [isDragging, setIsDragging] = useState(false);

  const handleSpaceKeyDown = (e) => {
    if(e.key == " ") {
      setIsDragging(true)
      console.debug(isDragging)
    }
  }
  
  const handleSpaceKeyUp = (e) => {
    if(e.key == " ") {
      setIsDragging(false)
      console.debug(isDragging)
    }
  }
  
  // Hook
function useWindowSize() {
  // Initialize state with undefined width/height so server and client renders match
  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/
  const [windowSize, setWindowSize] = useState({
    width: undefined,
    height: undefined,
  });

  useEffect(() => {
    // only execute all the code below in client side
    // Handler to call on window resize
    function handleResize() {
      // Set window width/height to state
      setWindowSize({
        width: window.innerWidth,
        height: window.innerHeight,
      });
    }
    
    // Add event listener
    window.addEventListener("resize", handleResize);
     
    // Call handler right away so state gets updated with initial window size
    handleResize();
    
    // Remove event listener on cleanup
    return () => window.removeEventListener("resize", handleResize);
  }, []); // Empty array ensures that effect is only run on mount
  return windowSize;
}

  return (
    <>
      <Head>
        <title>Image Editor</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main 
      style={{
        width: windowSize.width,
        height: windowSize.height
      }
      }
      className={styles.main}
      onKeyDown={handleSpaceKeyDown}
      onKeyUp={handleSpaceKeyUp}
      tabIndex="0"
      >
        {/* <canvas className={`${styles.board} ${styles.boardDebug}`} width={960} height={540}></canvas> */}
        <MyCanvas windowSize={windowSize} className={styles.board} isDragging={isDragging}/>
      </main>
        <ButtonPanel />
    </>
  )
}
